// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecommendationEngine.Data;

namespace RecommendationEngine.Migrations
{
    [DbContext(typeof(RecommendationDbContext))]
    [Migration("20220228051139_Initial_Migrations")]
    partial class Initial_Migrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RecommendationEngine.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            OptionId = 1,
                            OptionName = "Mutual Fund Investments",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 2,
                            OptionName = "Payments",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 3,
                            OptionName = "Portfolio",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 4,
                            OptionName = "Link Bank Account",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 5,
                            OptionName = "KYC",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 6,
                            OptionName = "Investment Readiness",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 7,
                            OptionName = "Investment Options",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 8,
                            OptionName = "Account Statements",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 9,
                            OptionName = "User Profile",
                            QuestionId = 1
                        },
                        new
                        {
                            OptionId = 10,
                            OptionName = "Privacy & Security",
                            QuestionId = 1
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionText = "What can we help you with?"
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Models.SubOption", b =>
                {
                    b.Property<int>("SubOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<string>("SubOptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubOptionId");

                    b.HasIndex("OptionId");

                    b.ToTable("SubOptions");

                    b.HasData(
                        new
                        {
                            SubOptionId = 1,
                            OptionId = 1,
                            SubOptionText = "Investment/Buy"
                        },
                        new
                        {
                            SubOptionId = 2,
                            OptionId = 1,
                            SubOptionText = "Sell/Withdraw"
                        },
                        new
                        {
                            SubOptionId = 3,
                            OptionId = 1,
                            SubOptionText = "In-Progress Transactions"
                        },
                        new
                        {
                            SubOptionId = 4,
                            OptionId = 1,
                            SubOptionText = "Failed Transactions"
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Models.Option", b =>
                {
                    b.HasOne("RecommendationEngine.Models.Question", null)
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecommendationEngine.Models.SubOption", b =>
                {
                    b.HasOne("RecommendationEngine.Models.Option", null)
                        .WithMany("SubOptions")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecommendationEngine.Models.Option", b =>
                {
                    b.Navigation("SubOptions");
                });

            modelBuilder.Entity("RecommendationEngine.Models.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
